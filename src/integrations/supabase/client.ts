
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://pjbmrxifunosbyxwmnrt.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBqYm1yeGlmdW5vc2J5eHdtbnJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMzMDI5MjMsImV4cCI6MjA1ODg3ODkyM30.I9TvDc-P3uMyRrvfRZEDzwQwpZeSU4pX5JQOds1H8bc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// This is a workaround to make TypeScript happy with the database schema
// until the types.ts file is regenerated
export const customSupabase = {
  from: (table: string) => supabase.from(table as any),
  rpc: (fn: string, params?: any) => supabase.rpc(fn as any, params)
};
